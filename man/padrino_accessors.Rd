% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R
\name{vital_rate_exprs.pdb_proto_ipm_list}
\alias{vital_rate_exprs.pdb_proto_ipm_list}
\alias{vital_rate_exprs.pdb_ipm}
\alias{vital_rate_exprs<-.pdb_proto_ipm_list}
\alias{kernel_formulae.pdb_proto_ipm_list}
\alias{kernel_formulae.pdb_ipm}
\alias{kernel_formulae<-.pdb_proto_ipm_list}
\alias{domains.pdb_proto_ipm_list}
\alias{domains.pdb_ipm}
\alias{parameters.pdb_proto_ipm_list}
\alias{parameters.pdb_ipm}
\alias{parameters<-.pdb_proto_ipm_list}
\alias{pop_state.pdb_proto_ipm_list}
\alias{pop_state.pdb_ipm}
\alias{vital_rate_funs.pdb_ipm}
\alias{int_mesh.pdb_ipm}
\alias{pdb_new_fun_form}
\title{Accessor functions for (semi) built Padrino objects}
\usage{
\method{vital_rate_exprs}{pdb_proto_ipm_list}(object)

\method{vital_rate_exprs}{pdb_ipm}(object)

\method{vital_rate_exprs}{pdb_proto_ipm_list}(object, kernel = NULL, vital_rate = NULL) <- value

\method{kernel_formulae}{pdb_proto_ipm_list}(object)

\method{kernel_formulae}{pdb_ipm}(object)

\method{kernel_formulae}{pdb_proto_ipm_list}(object, kernel) <- value

\method{domains}{pdb_proto_ipm_list}(object)

\method{domains}{pdb_ipm}(object)

\method{parameters}{pdb_proto_ipm_list}(object)

\method{parameters}{pdb_ipm}(object)

\method{parameters}{pdb_proto_ipm_list}(object, ..., ipm_id = NULL) <- value

\method{pop_state}{pdb_proto_ipm_list}(object)

\method{pop_state}{pdb_ipm}(object)

\method{vital_rate_funs}{pdb_ipm}(ipm)

\method{int_mesh}{pdb_ipm}(ipm, full_mesh = TRUE)

pdb_new_fun_form(...)
}
\arguments{
\item{object}{An object produced by \code{pdb_make_proto_ipm} or
\code{pdb_make_ipm}.}

\item{kernel}{Ignored, present for compatibility with \code{ipmr}.}

\item{vital_rate}{Ignored, present for compatibility with \code{ipmr}.}

\item{value}{The value to insert. Should be a named list where the names
correspond to parameter names and the entries are new parameter values.}

\item{...}{Ignored}

\item{ipm_id}{The \code{ipm_id} to set the new parameter values for}

\item{ipm}{A \code{pdb_ipm} object.}

\item{full_mesh}{Logical. Return the complete set of meshpoints or only the
unique ones.}
}
\description{
Padrino versions of \code{\link[ipmr]{accessors}}.
}
\details{
\code{pdb_new_fun_form} must be used when setting new expressions for
vital rates and kernel formulae. The \code{...} argument should be a named list
of named lists. The top most layer should be \code{ipm_id}'s. The next layer
should be a list where the names are vital rates you wish to modify, and the
values are the expressions you want to insert. See examples..
}
\examples{

 data(pdb)
 my_pdb <- pdb_make_proto_ipm(pdb, c("aaaa17", "aaa310"))

  # These expressions won't be useful unless new parameter values are also
  # set:

vital_rate_exprs(my_pdb) <- pdb_new_fun_form(
    list(
      aaa310 = list(mu_g = g_int + g_slope * size_1 + g_slope_2 * size_1^2),
      aaaa17 = list(sigmax2 = sqrt(g_var * exp(cfv1 + cfv2 * size_1))
     )
   )
 )

 kernel_formulae(my_pdb) <- pdb_new_fun_form(
   list(
     aaaa17 = list(Y = recr_size * yearling_s * germ_prob * d_size),
     aaa310 = list(F = f_n * f_d * establishment_prob)
   )
 )

}
